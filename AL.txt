.input-search {
  display: flex; /* Arrange elements horizontally */
  flex-direction: column; /* Stack elements vertically */
  align-items: center; /* Center elements horizontally */
  margin: 2rem auto; /* Add some margin for spacing */
  width: 300px; /* Set a fixed width */
}

.input-search input {
  padding: 0.5rem 1rem; /* Add padding for readability */
  border: 1px solid #ccc; /* Create a thin border */
  border-radius: 4px; /* Add rounded corners */
  margin-bottom: 1rem; /* Add space between inputs */
  font-size: 1rem; /* Set font size */
}

.input-search button {
  padding: 0.75rem 1.5rem; /* Adjust button size */
  background-color: #4CAF50; /* Green color */
  color: white; /* White text */
  border: none; /* Remove default border */
  border-radius: 4px; /* Add rounded corners */
  cursor: pointer; /* Indicate clickable behavior */
}

.input-search button:hover {
  background-color: #3e8e41; /* Darker green on hover */
}

.input-search p {
  font-size: 0.8rem; /* Adjust font size for result */
  margin-top: 1rem; /* Add space after search button */
}



import React, { useState } from 'react';

function InputSearch() {
  const [name, setName] = useState('');
  const [address, setAddress] = useState('');
  const [searchResult, setSearchResult] = useState(null);

  // Replace this sample data with your actual Excel sheet structure
  const data = [
    { name: 'John Doe', value: '123 Main Street' },
    { name: 'Jane Smith', value: '456 Elm Street' },
    { name: 'Alice Johnson', value: '789 Oak Avenue' },
  ];

  const handleNameChange = (event) => {
    setName(event.target.value);
  };

  const handleAddressChange = (event) => {
    setAddress(event.target.value);
  };

  const search = () => {
    const searchString = `${name} - ${address}`;
    const foundItem = data.find((item) => item.name === searchString);
    setSearchResult(foundItem ? foundItem.value : 'Not Found');
  };

  return (
    <div>
      <input type="text" placeholder="Name" value={name} onChange={handleNameChange} />
      <input type="text" placeholder="Address" value={address} onChange={handleAddressChange} />
      <button onClick={search}>Search</button>
      <p>Search Result: {searchResult}</p>
    </div>
  );
}

export default InputSearch;




import React, { useState, useEffect } from 'react';
const XLSX = require('xlsx'); // Assuming you have `xlsx` installed using npm or yarn

function InputSearch() {
  const [name, setName] = useState('');
  const [address, setAddress] = useState('');
  const [searchResult, setSearchResult] = useState(null);

  useEffect(() => {
    const fetchData = async () => {
      const workbook = XLSX.readFile('path/to/your/excel_file.xlsx'); // Replace with your file path
      const sheetName = workbook.SheetNames[0]; // Get the first sheet
      const worksheet = workbook.Sheets[sheetName];
      const data = XLSX.utils.sheet_to_object(worksheet); // Convert sheet to object array
      setData(data);
    };

    fetchData();
  }, []);

  const [data, setData] = useState([]);

  const handleNameChange = (event) => {
    setName(event.target.value);
  };

  const handleAddressChange = (event) => {
    setAddress(event.target.value);
  };

  const search = () => {
    const searchString = `${name} - ${address}`;
    const foundItem = data.find((item) => item.name === searchString);
    setSearchResult(foundItem ? foundItem.value : 'Not Found');
  };

  return (
    <div>
      <input type="text" placeholder="Name" value={name} onChange={handleNameChange} />
      <input type="text" placeholder="Address" value={address} onChange={handleAddressChange} />
      <button onClick={search}>Search</button>
      <p>Search Result: {searchResult}</p>
    </div>
  );
}

export default InputSearch;
