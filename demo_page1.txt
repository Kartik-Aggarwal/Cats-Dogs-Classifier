.json-container {
  display: flex;
  flex-wrap: wrap;
}

.json-item {
  margin-right: 20px; /* Adjust spacing between items */
  margin-bottom: 10px; /* Add space below each item */
}

.type {
  font-weight: bold; /* Make type bold */
}

.text-value {
  margin-left: 5px; /* Add space between type and text_value */
  /* Adjust width and display style for text_value */
  word-break: break-word; /* Wrap long text */
}
--------------------------

import React from 'react';
import './DisplayJsonData.css'; // Import CSS file for styling (create this file)

const DisplayJsonData = ({ jsonData }) => {
  return (
    <div className="json-container">
      {jsonData.map((item, index) => (
        <div key={index} className="json-item">
          <span className="type">{item.type}: </span>
          <span className="text-value">{item.text_value}</span>
        </div>
      ))}
    </div>
  );
};

const YourComponent = () => {
  // Example JSON data (replace this with your actual JSON import)
  const jsonData = [
    {
      "type": "Pro_number",
      "text_value": "950-731294"
    },
    {
      "type": "Another_type",
      "text_value": "Some value that is longer and will wrap to the next line"
    },
    // Add more items as needed
  ];

  return (
    <div>
      <h2>Display JSON Data</h2>
      <DisplayJsonData jsonData={jsonData} />
    </div>
  );
};

export default YourComponent;
---------------
.json-container {
  width: 100%;
}

.json-item {
  margin-bottom: 10px; /* Add space between items */
}

.type {
  font-weight: bold; /* Make type bold */
}

.text-value {
  /* Adjust width and display style for text_value */
  display: inline-block;
  word-break: break-word; /* Wrap long text */
}
-----------------------



import React from 'react';

const DisplayJsonData = ({ jsonData }) => {
  return (
    <div>
      {jsonData.map((item, index) => (
        <div key={index}>
          <p>
            <strong>{item.type}: </strong>
            {item.text_value}
          </p>
        </div>
      ))}
    </div>
  );
};

const YourComponent = () => {
  // Example JSON data (replace this with your actual JSON import)
  const jsonData = [
    {
      "type": "Pro_number",
      "text_value": "950-731294"
    },
    {
      "type": "Another_type",
      "text_value": "Some value"
    },
    // Add more items as needed
  ];

  return (
    <div>
      <h2>Display JSON Data</h2>
      <DisplayJsonData jsonData={jsonData} />
    </div>
  );
};

export default YourComponent;
----------------------------------










[
    {
        "type": "Pro_number",
        "text_value": "950-731294"
    }
]

import React, { useState } from 'react';
import './ImageUploader.css'; // Import custom CSS for styling

const ImageUploader = () => {
  const [selectedImage, setSelectedImage] = useState(null);

  // Function to handle file selection
  const handleImageChange = (e) => {
    const file = e.target.files[0]; // Assuming single file selection
    if (file) {
      const reader = new FileReader();
      reader.onload = () => {
        setSelectedImage(reader.result); // Set the selected image to be displayed
      };
      reader.readAsDataURL(file);
    }
  };

  return (
    <div className="image-uploader-container">
      <h2 className="title">Image Uploader</h2>
      <label htmlFor="upload-button" className="custom-file-upload">
        Choose Image
      </label>
      <input
        type="file"
        id="upload-button"
        accept="image/*"
        onChange={handleImageChange}
        style={{ display: 'none' }}
      />
      {selectedImage && (
        <div className="image-preview">
          <h4>Preview:</h4>
          <img
            src={selectedImage}
            alt="Uploaded"
            className="preview-image"
          />
        </div>
      )}
    </div>
  );
};

export default ImageUploader;





.image-uploader-container {
  max-width: 400px;
  margin: 0 auto;
  padding: 20px;
  border: 1px solid #ccc;
  border-radius: 8px;
}

.title {
  text-align: center;
  margin-bottom: 20px;
}

.custom-file-upload {
  display: block;
  width: 200px;
  margin: 0 auto;
  padding: 10px 15px;
  background-color: #007bff;
  color: #fff;
  text-align: center;
  border-radius: 4px;
  cursor: pointer;
}

.image-preview {
  margin-top: 20px;
  text-align: center;
}

.preview-image {
  max-width: 100%;
  max-height: 300px;
  border-radius: 4px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

------------------


import React, { useState } from 'react';
import './ImageUploader.css'; // Import custom CSS for styling

const ImageUploader = ({ containerClassName, titleClassName, buttonClassName, previewClassName }) => {
  const [selectedImage, setSelectedImage] = useState(null);

  // Function to handle file selection
  const handleImageChange = (e) => {
    const file = e.target.files[0]; // Assuming single file selection
    if (file) {
      const reader = new FileReader();
      reader.onload = () => {
        setSelectedImage(reader.result); // Set the selected image to be displayed
      };
      reader.readAsDataURL(file);
    }
  };

  return (
    <div className={containerClassName}>
      <h2 className={titleClassName}>Image Uploader</h2>
      <label htmlFor="upload-button" className={buttonClassName}>
        Choose Image
      </label>
      <input
        type="file"
        id="upload-button"
        accept="image/*"
        onChange={handleImageChange}
        style={{ display: 'none' }}
      />
      {selectedImage && (
        <div className={previewClassName}>
          <h4>Preview:</h4>
          <img
            src={selectedImage}
            alt="Uploaded"
            className="preview-image"
          />
        </div>
      )}
    </div>
  );
};

export default ImageUploader;


---------------------


import React from 'react';
import ImageUploader from './ImageUploader';
import './App.css';

const App = () => {
  return (
    <div className="app-container">
      <div className="left-pane">
        {/* Text data display */}
        <div>
          <h2>Welcome to My Website</h2>
          <p>This is some text data displayed on the left side.</p>
        </div>
      </div>
      <div className="right-pane">
        {/* Image uploader component */}
        <ImageUploader
          containerClassName="image-uploader-container"
          titleClassName="title"
          buttonClassName="custom-file-upload"
          previewClassName="image-preview"
        />
      </div>
    </div>
  );
};

export default App;


------------------


.app-container {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 20px;
  padding: 20px;
}

.left-pane {
  padding: 20px;
  background-color: #f0f0f0;
  border-radius: 8px;
}

.right-pane {
  padding: 20px;
  background-color: #ffffff;
  border-radius: 8px;
}

-----------
import React, { useState } from 'react';
import './ImageUploader.css'; // Import custom CSS for styling

const ImageUploader = ({ containerClassName, titleClassName, buttonClassName, previewClassName }) => {
  const [selectedImage, setSelectedImage] = useState(null);

  // Function to handle file selection
  const handleImageChange = (e) => {
    const file = e.target.files[0]; // Assuming single file selection
    if (file) {
      const reader = new FileReader();
      reader.onload = () => {
        setSelectedImage(reader.result); // Set the selected image to be displayed
      };
      reader.readAsDataURL(file);
    }
  };

  return (
    <div className={containerClassName}>
      <h2 className={titleClassName}>Image Uploader</h2>
      <label htmlFor="upload-button" className={buttonClassName}>
        Choose Image
      </label>
      <input
        type="file"
        id="upload-button"
        accept="image/*"
        onChange={handleImageChange}
        style={{ display: 'none' }}
      />
      {selectedImage && (
        <div className={previewClassName}>
          <h4>Preview:</h4>
          <img
            src={selectedImage}
            alt="Uploaded"
            className="preview-image"
          />
        </div>
      )}
    </div>
  );
};

export default ImageUploader;
-----------
import React from 'react';
import ImageUploader from './ImageUploader';
import './App.css';

const App = () => {
  return (
    <div className="app-container">
      <div className="left-pane">
        {/* Text data display */}
        <div>
          <h2>Welcome to My Website</h2>
          <p>This is some text data displayed on the left side.</p>
        </div>
      </div>
      <div className="right-pane">
        {/* Image uploader component */}
        <ImageUploader
          containerClassName="image-uploader-container"
          titleClassName="title"
          buttonClassName="custom-file-upload"
          previewClassName="image-preview"
        />
      </div>
    </div>
  );
};

export default App;
------------------------
body {
  margin: 0;
  padding: 0;
  font-family: Arial, sans-serif;
}

.app-container {
  display: flex;
  height: 100vh; /* Use full viewport height */
}

.left-pane {
  flex: 1; /* Take up 50% of the width */
  padding: 20px;
  background-color: #f0f0f0;
  border-radius: 8px;
}

.right-pane {
  flex: 1; /* Take up 50% of the width */
  padding: 20px;
  background-color: #ffffff;
  border-radius: 8px;
  display: flex;
  justify-content: center;
  align-items: center;
}

/* Additional styles for ImageUploader component */
.image-uploader-container {
  width: 100%;
}

.title {
  text-align: center;
  margin-bottom: 20px;
}

.custom-file-upload {
  display: block;
  width: 200px;
  margin: 0 auto;
  padding: 10px 15px;
  background-color: #007bff;
  color: #fff;
  text-align: center;
  border-radius: 4px;
  cursor: pointer;
}

.image-preview {
  margin-top: 20px;
  text-align: center;
}

.preview-image {
  max-width: 100%;
  max-height: 300px;
  border-radius: 4px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}
-------------------------
