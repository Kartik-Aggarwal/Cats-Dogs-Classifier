Pro Nbr	Biller Dt Tm	Scan Dt	Origin Terminal Cd	Destination Terminal Cd	Purchase Order #	Bill Of Lading #	Pick Up Dt	Shipper #	Shipper Name	Shipper Address	Shipper City	Shipper State	Shipper Zip	Consignee #	Consignee Name	Consignee Address	Consignee City	Consignee State	Consignee Zip	Bill To #	Bill To Type Cd	Bill To Name	Bill To Address	Bill To City	Bill To State	Bill To Zip	COD Amt	Pickup SCAC	Pallet Cnt	Total Wgt	Is Hazmat	User Id	CL Pro Nbr	Biller	Reference Pro #	Initial Amount	Fatal_Error	Non-Fatal Error	Error


from sklearn.ensemble import AdaBoostClassifier
svc = SVC(probability=True, kernel='linear')
abc = AdaBoostClassifier(n_estimators=50, estimator=svc)
model = abc.fit(X_train, y_train)
pred = model.predict(X_test)
recall_score(y_test, pred), precision_score(y_test, pred), f1_score(y_test, pred)

import pandas as pd
from sklearn.tree import DecisionTreeClassifier

data = pd.DataFrame()
data['A'] = ['a','a','b','a']
data['B'] = ['b','b','a','b']
data['C'] = [0, 0, 1, 0]
data['Class'] = ['n','n','y','n']

tree = DecisionTreeClassifier()

one_hot_data = pd.get_dummies(data[['A','B','C']],drop_first=True)
tree.fit(one_hot_data, data['Class'])



label_encoders = {}
for col in non_numeric_cols:
    label_encoders[col] = LabelEncoder()
    df[col] = label_encoders[col].fit_transform(df[col])

# Compute correlation matrix
correlation_matrix = df.corr()

print(correlation_matrix)
