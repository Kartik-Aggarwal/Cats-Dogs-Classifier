from sklearn.ensemble import AdaBoostClassifier
svc = SVC(probability=True, kernel='linear')
abc = AdaBoostClassifier(n_estimators=50, estimator=svc)
model = abc.fit(X_train, y_train)
pred = model.predict(X_test)
recall_score(y_test, pred), precision_score(y_test, pred), f1_score(y_test, pred)

import pandas as pd
from sklearn.tree import DecisionTreeClassifier

data = pd.DataFrame()
data['A'] = ['a','a','b','a']
data['B'] = ['b','b','a','b']
data['C'] = [0, 0, 1, 0]
data['Class'] = ['n','n','y','n']

tree = DecisionTreeClassifier()

one_hot_data = pd.get_dummies(data[['A','B','C']],drop_first=True)
tree.fit(one_hot_data, data['Class'])



label_encoders = {}
for col in non_numeric_cols:
    label_encoders[col] = LabelEncoder()
    df[col] = label_encoders[col].fit_transform(df[col])

# Compute correlation matrix
correlation_matrix = df.corr()

print(correlation_matrix)
