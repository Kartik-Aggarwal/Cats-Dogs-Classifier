import React from 'react';
import Button from '@mui/material/Button';

const FileUploadButton = () => {
  const handleFileUpload = () => {
    // Trigger file input click event
    document.getElementById('fileInput').click();
  };

  const handleFileChange = (event) => {
    // Handle file selection
    const selectedFile = event.target.files[0];
    console.log('Selected File:', selectedFile);
    // You can perform further operations with the selected file here
  };

  return (
    <>
      {/* Hidden file input */}
      <input
        type="file"
        id="fileInput"
        style={{ display: 'none' }}
        onChange={handleFileChange}
      />
      {/* Visible button to trigger file input click */}
      <Button variant="outlined" onClick={handleFileUpload}>
        Choose File
      </Button>
    </>
  );
};

export default FileUploadButton;



import React, { useState } from 'react';
import { Button, CircularProgress } from '@mui/material';
import Table from './Table'; // Assuming Table is the component you want to render

const RunButton = () => {
  // State to manage the loading state of running
  const [running, setRunning] = useState(false);

  // Function to handle the "Run" button click
  const handleRunClick = () => {
    // Set running state
    setRunning(true);

    // Simulate running with a delay
    setTimeout(() => {
      setRunning(false);
    }, 3000); // Simulating a 3-second delay for fake loading
  };

  return (
    <div style={{ textAlign: 'center' }}>
      <Button
        variant="contained"
        onClick={handleRunClick}
        disabled={running}
        sx={{ mt: 2, bgcolor: 'primary.main', color: 'primary.contrastText', '&:hover': { bgcolor: 'primary.dark' } }}
      >
        {running ? <CircularProgress size={24} sx={{ color: 'white' }} /> : 'Run'}
      </Button>
      {running && <p style={{ marginTop: '10px' }}>Running...</p>}
      {!running && <Table />} {/* Render the Table component after running completes */}
    </div>
  );
};

export default RunButton;



import React, { useState } from 'react';
import { Button, Box, Checkbox, FormControlLabel, CircularProgress, Typography, Grid } from '@mui/material';

const RealtimeChecklist = () => {
  // State to manage whether the checklist should be visible
  const [showChecklist, setShowChecklist] = useState(false);
  // State to manage the checked state of each item
  const [checkedItems, setCheckedItems] = useState({
    item1: false,
    item2: false,
    item3: false,
    item4: false,
    item5: false,
    item6: false, // Add item6
  });
  // State to manage the loading state of checking items
  const [checkingItems, setCheckingItems] = useState(false);

  // Function to handle the "Check inputs" button click
  const handleCheckInputsClick = () => {
    // Show the checklist
    setShowChecklist(true);
    // Set loading state
    setCheckingItems(true);

    // Simulate real-time checking with a delay
    setTimeout(() => {
      setCheckingItems(false);
      setCheckedItems({
        item1: true,
        item2: true,
        item3: true,
        item4: true,
        item5: true,
        item6: true, // Set item6 to true
      });
    }, 1000 * 6); // 1 second delay for each of the 6 items
  };

  return (
    <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>
      <Button
        variant="contained"
        onClick={handleCheckInputsClick}
        disabled={showChecklist}
        sx={{ mt: 2, bgcolor: 'primary.main', color: 'primary.contrastText', '&:hover': { bgcolor: 'primary.dark' } }}
      >
        Check inputs
      </Button>
      {showChecklist && (
        <Box sx={{ mt: 2 }}>
          <Typography variant="h6">Checklist</Typography>
          <Grid container spacing={2} sx={{ mt: 1 }}>
            <Grid item xs={12} md={6}>
              <FormControlLabel
                control={<Checkbox checked={checkedItems.item1} sx={{ '&.Mui-checked': { color: 'green' } }} />}
                label="Item 1"
                disabled={checkingItems}
              />
            </Grid>
            <Grid item xs={12} md={6}>
              <FormControlLabel
                control={<Checkbox checked={checkedItems.item2} sx={{ '&.Mui-checked': { color: 'green' } }} />}
                label="Item 2"
                disabled={checkingItems}
              />
            </Grid>
            <Grid item xs={12} md={6}>
              <FormControlLabel
                control={<Checkbox checked={checkedItems.item3} sx={{ '&.Mui-checked': { color: 'green' } }} />}
                label="Item 3"
                disabled={checkingItems}
              />
            </Grid>
          </Grid>
          <Grid container spacing={2} sx={{ mt: 1 }}>
            <Grid item xs={12} md={6}>
              <FormControlLabel
                control={<Checkbox checked={checkedItems.item4} sx={{ '&.Mui-checked': { color: 'green' } }} />}
                label="Item 4"
                disabled={checkingItems}
              />
            </Grid>
            <Grid item xs={12} md={6}>
              <FormControlLabel
                control={<Checkbox checked={checkedItems.item5} sx={{ '&.Mui-checked': { color: 'green' } }} />}
                label="Item 5"
                disabled={checkingItems}
              />
            </Grid>
            <Grid item xs={12} md={6}>
              <FormControlLabel
                control={<Checkbox checked={checkedItems.item6} sx={{ '&.Mui-checked': { color: 'green' } }} />}
                label="Item 6"
                disabled={checkingItems}
              />
            </Grid>
          </Grid>
        </Box>
      )}
      {checkingItems && <CircularProgress sx={{ mt: 2 }} />} {/* Show loading indicator while checking items */}
    </Box>
  );
};

export default RealtimeChecklist;
